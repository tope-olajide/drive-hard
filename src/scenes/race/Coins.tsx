import { Coin } from "../../FBXModelLoader";

import { Vector3 } from "@react-three/fiber";

export const CoinGroupLane1 = () => {
  const positions: Vector3[] = [
    [-0.45, -0.29, 0],
    [-0.45, -0.29, 0.5],
    [-0.45, -0.29, 1],
    [-0.45, -0.29, 1.5],
    [-0.45, -0.29, 2],
    [-0.45, -0.29, 2.5],
    [-0.45, -0.29, 3],
    [-0.45, -0.29, 3.5],
    [-0.45, -0.29, 4],
  ];

  return (
    <>
      {positions.map((position, index) => (
        <mesh
          key={index}
          position={position}
          scale={0.0005}
          rotation={[90 * (Math.PI / 180), 0, 0]}
        >
          <Coin />
        </mesh>
      ))}
    </>
  );
};

export const CoinGroupLane2 = () => {
  const positions: Vector3[] = [
    [-0.16, -0.29, 0],
    [-0.16, -0.29, 0.5],
    [-0.16, -0.29, 1],
    [-0.16, -0.29, 1.5],
    [-0.16, -0.29, 2],
    [-0.16, -0.29, 2.5],
    [-0.16, -0.29, 3],
    [-0.16, -0.29, 3.5],
    [-0.16, -0.29, 4],
  ];

  return (
    <>
      {positions.map((position, index) => (
        <mesh
          key={index}
          position={position}
          scale={0.0005}
          rotation={[90 * (Math.PI / 180), 0, 0]}
        >
          <Coin />
        </mesh>
      ))}
    </>
  );
};

export const CoinGroupLane3 = () => {
    const positions: Vector3[] = [
      [0.16, -0.29, 0],
      [0.16, -0.29, 0.5],
      [0.16, -0.29, 1],
      [0.16, -0.29, 1.5],
      [0.16, -0.29, 2],
      [0.16, -0.29, 2.5],
      [0.16, -0.29, 3],
      [0.16, -0.29, 3.5],
      [0.16, -0.29, 4],
    ];
  
    return (
      <>
        {positions.map((position, index) => (
          <mesh
            key={index}
            position={position}
            scale={0.0005}
            rotation={[90 * (Math.PI / 180), 0, 0]}
          >
            <Coin />
          </mesh>
        ))}
      </>
    );
};
  
export const CoinGroupLane4 = () => {
    const positions: Vector3[] = [
      [0.45, -0.29, 0],
      [0.45, -0.29, 0.5],
      [0.45, -0.29, 1],
      [0.45, -0.29, 1.5],
      [0.45, -0.29, 2],
      [0.45, -0.29, 2.5],
      [0.45, -0.29, 3],
      [0.45, -0.29, 3.5],
      [0.45, -0.29, 4],
    ];
  
    return (
      <>
        {positions.map((position, index) => (
          <mesh
            key={index}
            position={position}
            scale={0.0005}
            rotation={[90 * (Math.PI / 180), 0, 0]}
          >
            <Coin />
          </mesh>
        ))}
      </>
    );
};
  
export const CoinGroupLane1_2 = () => {
    const positions: Vector3[] = [
      [-0.45, -0.29, 0],
      [-0.45, -0.29, 0.5],
      [-0.45, -0.29, 1],
      [-0.45, -0.29, 1.5],
      [-0.45, -0.29, 2],
      [-0.45, -0.29, 2.5],
      [-0.45, -0.29, 3],
      [-0.45, -0.29, 3.5],
        [-0.45, -0.29, 4],
        [-0.16, -0.29, 0],
        [-0.16, -0.29, 0.5],
        [-0.16, -0.29, 1],
        [-0.16, -0.29, 1.5],
        [-0.16, -0.29, 2],
        [-0.16, -0.29, 2.5],
        [-0.16, -0.29, 3],
        [-0.16, -0.29, 3.5],
        [-0.16, -0.29, 4],
      
    ];
  
    return (
      <>
        {positions.map((position, index) => (
          <mesh
            key={index}
            position={position}
            scale={0.0005}
            rotation={[90 * (Math.PI / 180), 0, 0]}
          >
            <Coin />
          </mesh>
        ))}
      </>
    );
};
  
export const CoinGroupLane1_2_3 = () => {
    const positions: Vector3[] = [
      [-0.45, -0.29, 0],
      [-0.45, -0.29, 0.5],
      [-0.45, -0.29, 1],
      [-0.45, -0.29, 1.5],
      [-0.45, -0.29, 2],
      [-0.45, -0.29, 2.5],
      [-0.45, -0.29, 3],
      [-0.45, -0.29, 3.5],
        [-0.45, -0.29, 4],
        [-0.16, -0.29, 0],
        [-0.16, -0.29, 0.5],
        [-0.16, -0.29, 1],
        [-0.16, -0.29, 1.5],
        [-0.16, -0.29, 2],
        [-0.16, -0.29, 2.5],
        [-0.16, -0.29, 3],
        [-0.16, -0.29, 3.5],
        [-0.16, -0.29, 4],
        [0.16, -0.29, 0],
        [0.16, -0.29, 0.5],
        [0.16, -0.29, 1],
        [0.16, -0.29, 1.5],
        [0.16, -0.29, 2],
        [0.16, -0.29, 2.5],
        [0.16, -0.29, 3],
        [0.16, -0.29, 3.5],
        [0.16, -0.29, 4],
      
    ];
  
    return (
      <>
        {positions.map((position, index) => (
          <mesh
            key={index}
            position={position}
            scale={0.0005}
            rotation={[90 * (Math.PI / 180), 0, 0]}
          >
            <Coin />
          </mesh>
        ))}
      </>
    );
};
  
export const CoinGroupLane1_2_3_4 = () => {
    const positions: Vector3[] = [
      [-0.45, -0.29, 0],
      [-0.45, -0.29, 0.5],
      [-0.45, -0.29, 1],
      [-0.45, -0.29, 1.5],
      [-0.45, -0.29, 2],
      [-0.45, -0.29, 2.5],
      [-0.45, -0.29, 3],
      [-0.45, -0.29, 3.5],
        [-0.45, -0.29, 4],
        [-0.16, -0.29, 0],
        [-0.16, -0.29, 0.5],
        [-0.16, -0.29, 1],
        [-0.16, -0.29, 1.5],
        [-0.16, -0.29, 2],
        [-0.16, -0.29, 2.5],
        [-0.16, -0.29, 3],
        [-0.16, -0.29, 3.5],
        [-0.16, -0.29, 4],
        [0.16, -0.29, 0],
        [0.16, -0.29, 0.5],
        [0.16, -0.29, 1],
        [0.16, -0.29, 1.5],
        [0.16, -0.29, 2],
        [0.16, -0.29, 2.5],
        [0.16, -0.29, 3],
        [0.16, -0.29, 3.5],
        [0.16, -0.29, 4],
        [0.45, -0.29, 0],
      [0.45, -0.29, 0.5],
      [0.45, -0.29, 1],
      [0.45, -0.29, 1.5],
      [0.45, -0.29, 2],
      [0.45, -0.29, 2.5],
      [0.45, -0.29, 3],
      [0.45, -0.29, 3.5],
      [0.45, -0.29, 4],
      
    ];
  
    return (
      <>
        {positions.map((position, index) => (
          <mesh
            key={index}
            position={position}
            scale={0.0005}
            rotation={[90 * (Math.PI / 180), 0, 0]}
          >
            <Coin />
          </mesh>
        ))}
      </>
    );
  };